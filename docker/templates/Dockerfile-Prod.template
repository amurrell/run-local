# --- Default Runtime stage build arguments ---
# when updating the version of the builder, use:
# docker build . -f Dockerfile.Builder --build-arg BUILDER_VERSION=<semVer> #...the rest of the args...
ARG BUILDER_VERSION=0.0.0
ARG BUILDER_PHP_VERSION=${PHP_VERSION}
ARG BUILDER_IMAGE_VARIANT=${FRANKENPHP_IMAGE_VARIANT}
ARG BUILDER_FRANKENPHP_VERSION=${FRANKENPHP_VERSION}
ARG DOCKER_REGISTRY=${DOCKER_REGISTRY_URL}

# --- Build Stage ---
FROM ${DOCKER_REGISTRY_URL}/${DOCKER_IMAGE_NAME}:builder-${BUILDER_VERSION} as builder

# Copy full application (to ensure artisan exists before composer install)
COPY . .

# Install dependencies and cache Laravel configs
RUN composer install --no-dev --optimize-autoloader \
  && php artisan config:cache \
  && php artisan route:cache \
  && php artisan view:cache

# --- Runtime stage ---
FROM dunglas/frankenphp:${BUILDER_FRANKENPHP_VERSION}-php${BUILDER_PHP_VERSION}-${BUILDER_IMAGE_VARIANT}

WORKDIR /app

COPY --from=builder /app /app

# Copy custom PHP config
COPY php.custom.ini /usr/local/etc/php/conf.d/99-custom.ini

# Copy templated Caddyfile and entrypoint
COPY Caddyfile /etc/caddy/Caddyfile

RUN mkdir -p /config/caddy /data/caddy \
  && chown -R www-data:www-data /config /data

# Laravel logging + FrankenPHP socket
ENV LOG_CHANNEL=stderr
ENV FRANKENPHP_CONFIG=unix//run/frankenphp.sock

# Set correct permissions
RUN chown -R www-data:www-data /app/storage /app/bootstrap/cache

USER www-data

EXPOSE 80

CMD ["frankenphp", "run", "--config", "/etc/caddy/Caddyfile"]
