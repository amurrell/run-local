#!/usr/bin/env bash

## Use to extend the usage of the rl commmand

# Load any rl-* functions in the rl-funcs folder
if [ -d "$REPO_ROOT/$RL_FUNC_FOLDER" ]; then
  for file in "$REPO_ROOT/$RL_FUNC_FOLDER/rl-"*; do
    if [ -f "$file" ]; then
      # shellcheck source=/dev/null
      source "$file"
      # step_text "Loaded rl-extended function: $file"
    fi
  done
fi

show_help_extended() {
  color_text faint "RL-Extended (Custom) Commands: "
  echo ""
  pretty_option "$(color_text primary "e1)")"  "list              " "· List all available rl sites in RL_DEV_FOLDER"
  pretty_option "$(color_text primary "e2)")"  "post-install      " "· Run post-install commands"
  pretty_option "$(color_text primary "e3)")"  "artisan           " "· Run an Artisan command"
  pretty_option "$(color_text primary "e4)")"  "debug-artisan     " "· Run an Artisan command with Xdebug enabled"
  pretty_option "$(color_text primary "e5)")"  "tinker            " "· Run Tinker (Laravel REPL)"
  pretty_option "$(color_text primary "e6)")"  "debug-tinker      " "· Run Tinker with Xdebug enabled"
  pretty_option "$(color_text primary "e7)")"  "assets            " "· Download, upload, swap assets - (checks $DATA_DIR for .tar.gz files)"
}

handle_rl_extended_choice() {
  case $1 in
    e1) ./run-local list ;;
    e2) ./run-local post-install ;;
    e3) ./run-local artisan ;;
    e4) ./run-local debug-artisan ;;
    e5) ./run-local tinker ;;
    e6) ./run-local debug-tinker ;;
    e7) ./run-local assets ;;
    *)
      step_text "No (valid) $1 option chosen... Quitting."
      exit 0
  esac
}

handle_rl_extended() {
  # Determine the script to run based on the first argument
  case $1 in
    list)
      # check alias is installed (using alias) requirement for rl list
      if ! alias rl &> /dev/null; then
        echo "Alias 'rl' is not installed. Please run 'rl install' to install it."
        exit 1
      fi
      # if we go 1 layer out, it will force rl alias
      (cd ../  && rl)
      exit $?
      ;;
    post-install)
      post_install
      exit $?
      ;;
    artisan)
      prompt_artisan_command "$@"
      # need everything after the first argument (eg. route:list)
      run_artisan_command "${*:2}"
      exit 0
      ;;
    debug-artisan)
      prompt_artisan_command "$@"
      run_debug_artisan_command "${*:2}"
      exit 0
      ;;
    tinker)
      run_tinker_command
      exit 0
      ;;
    debug-tinker)
      run_debug_tinker_command
      exit 0
      ;;
    *)
      echo "Unknown command: $1"
      exit 1
      ;;
  esac
}
