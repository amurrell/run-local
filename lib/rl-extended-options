#!/usr/bin/env bash

show_help_extended() {
  color_text faint "RL-Extended (Custom) Commands: "
  echo ""
  # the $check vs $command is for the file it comes from, eg. check "artisan" to get both artisan and debug-artisan commands
  make_extended_option "post-install" "post-install   " "· Run post-install commands"
  make_extended_option "composer"     "composer       " "· Run a Composer command"
  make_extended_option "artisan"      "artisan        " "· Run an Artisan command"
  make_extended_option "artisan"      "debug-artisan  " "· Run an Artisan command with Xdebug enabled (port $XDEBUG_CLI_PORT)"
  make_extended_option "tinker"       "tinker         " "· Run Tinker (Laravel REPL)"
  make_extended_option "tinker"       "debug-tinker   " "· Run Tinker with Xdebug enabled (port $XDEBUG_CLI_PORT)"
  make_extended_option "assets"       "assets-download" ". Download assets folder via ssh into tar.gz in rl/docker/data"
  make_extended_option "assets"       "assets         " ". Checks rl/docker/data for .tar.gz files, swaps/backs up current uploads"
  echo ""
}

handle_rl_extended() {
  # Determine the script to run based on the first argument
  case $1 in
    post-install)
      post_install
      exit $?
      ;;
    composer)
      # need everything after the first argument (eg. update --lock)
      run_composer_command "${*:2}"
      exit 0
      ;;
    artisan)
      prompt_artisan_command "$@"
      # need everything after the first argument (eg. route:list)
      run_artisan_command "${*:2}"
      exit 0
      ;;
    debug-artisan)
      prompt_artisan_command "$@"
      run_debug_artisan_command "${*:2}"
      exit 0
      ;;
    tinker)
      run_tinker_command
      exit 0
      ;;
    debug-tinker)
      run_debug_tinker_command
      exit 0
      ;;
    assets-download)
      assets_download
      exit 0
      ;;
    assets)
      assets_upload
      exit 0
      ;;
    *)
      echo "Unknown (extended) command: $1"
      exit 1
      ;;
  esac
}

